{"version":3,"file":"static/js/230.c0d5019d.chunk.js","mappings":"oIAAe,SAASA,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,CACT,CCXA,SAASQ,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GAC3CC,IAAmBG,EAAUA,EAAQC,QAAO,SAAUC,GACpD,OAAOZ,OAAOa,yBAAyBP,EAAQM,GAAKV,UACtD,KAAKM,EAAKM,KAAKC,MAAMP,EAAME,EAC7B,CAEA,OAAOF,CACT,CAEe,SAASQ,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAS,MAAQF,UAAUD,GAAKC,UAAUD,GAAK,CAAC,EACpDA,EAAI,EAAIb,EAAQL,OAAOqB,IAAS,GAAIC,SAAQ,SAAUxB,GACpD,EAAemB,EAAQnB,EAAKuB,EAAOvB,GACrC,IAAKE,OAAOuB,0BAA4BvB,OAAOwB,iBAAiBP,EAAQjB,OAAOuB,0BAA0BF,IAAWhB,EAAQL,OAAOqB,IAASC,SAAQ,SAAUxB,GAC5JE,OAAOC,eAAegB,EAAQnB,EAAKE,OAAOa,yBAAyBQ,EAAQvB,GAC7E,GACF,CAEA,OAAOmB,CACT,C,8DCxBaQ,EAAiB,SAAAC,GAC5B,IAAQC,EAAaD,EAAbC,SACFC,GAAWC,EAAAA,EAAAA,MAEjB,OADAC,QAAQC,IAAI,WAAYH,IAEtB,SAAC,KAAD,OAAUF,GAAV,IAAiBM,MAAO,CAAEC,SAAUL,EAASM,UAA7C,SACGP,IAGN,C,iKCTYQ,EAAWC,EAAAA,GAAAA,OAAH,kOAaRC,EAAiBD,EAAAA,GAAAA,IAAH,mE,SCsC3B,EAhDe,WAEb,OAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SAEzBC,GAAgBC,EAAAA,EAAAA,cAAY,WAChC,IAAKH,EACH,OAAOI,MAAM,gBAEf,iBAAC,qGACsBC,EAAAA,EAAAA,IAAYL,GADlC,OACOL,EADP,OAECC,EAAUD,EAAOW,SAFlB,0CAAD,EAID,GAAE,CAACN,KAEJO,EAAAA,EAAAA,YAAU,WAEJP,GAAOE,GACZ,GAAE,CAACF,EAAOE,IAOX,OACE,4BACE,iDACA,UAACT,EAAD,YACE,kBAAOe,KAAK,OAAOC,SATC,SAAAC,GACxB,IAAQvD,EAAUuD,EAAMrC,OAAhBlB,MACR4C,EAAgB,CAAEC,MAAO7C,GAAS,CAAEwD,SAAS,GAC9C,KAOK,SAACpB,EAAD,CAAUqB,QAASV,EAAnB,wBAEF,wBACGP,EAAOkB,KAAI,SAAAC,GAAI,OACd,yBACE,SAACjC,EAAAkC,EAAD,CACEC,GAAE,kBAAaF,EAAKG,IADtB,SAIGH,EAAKI,kBALDJ,EAAKG,GADA,QAavB,C","sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/LinkToPrevPage.jsx","pages/MoviePage/Movies.styled.js","pages/MoviePage/Movies.jsx"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import { Link, useLocation } from 'react-router-dom';\n\nexport const LinkToPrevPage = props => {\n  const { children } = props;\n  const location = useLocation();\n  console.log('location', location);\n  return (\n    <Link {...props} state={{ prevPage: location.pathname }}>\n      {children}\n    </Link>\n  );\n};\n","import styled from 'styled-components';\n\nexport const MovieBtn = styled.button`\n  padding: 2px 10px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n  margin-left: 2px;\n\n  :hover {\n    color: white;\n    background-color: orangered;\n  }\n`;\nexport const InputMovieWrap = styled.div`\n  margin-top: 8px;\n  margin-bottom: 8px;\n`;\n","import { searchMovie } from 'MovieAPI';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { LinkToPrevPage } from '../../components/LinkToPrevPage';\nimport { MovieBtn, InputMovieWrap } from 'pages/MoviePage/Movies.styled';\nconst Movies = () => {\n  // const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  const searchHandler = useCallback(() => {\n    if (!query) {\n      return alert('Enter movie');\n    }\n    (async () => {\n      const movies = await searchMovie(query);\n      setMovies(movies.results);\n    })();\n  }, [query]);\n\n  useEffect(() => {\n    // First search if search query is set\n    if (query) searchHandler();\n  }, [query, searchHandler]);\n\n  const handleQueryChange = event => {\n    const { value } = event.target;\n    setSearchParams({ query: value }, { replace: true }); //записати тернарник на очищення строки 30хв репети відео 2\n  };\n\n  return (\n    <div>\n      <h3>Find Movie to watch</h3>\n      <InputMovieWrap>\n        <input type=\"text\" onChange={handleQueryChange} />\n        <MovieBtn onClick={searchHandler}>Search</MovieBtn>\n      </InputMovieWrap>\n      <ul>\n        {movies.map(item => (\n          <li key={item.id}>\n            <LinkToPrevPage\n              to={`/movies/${item.id}`}\n              // state={{ prevPage: location.pathname }}\n            >\n              {item.original_title}\n            </LinkToPrevPage>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\nexport default Movies;\n"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","LinkToPrevPage","props","children","location","useLocation","console","log","state","prevPage","pathname","MovieBtn","styled","InputMovieWrap","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","searchHandler","useCallback","alert","searchMovie","results","useEffect","type","onChange","event","replace","onClick","map","item","L","to","id","original_title"],"sourceRoot":""}